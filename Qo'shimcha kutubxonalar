üìå C++ Qo‚Äòshimcha va Maxsus Kutubxonalar
Quyidagi jadvalda barcha maxsus header fayllar va ularning vazifasi keltirilgan.

Header	Vazifasi	Foydalanish
<random>	Tasodifiy sonlar generatsiyasi	std::mt19937, std::uniform_int_distribution
<algorithm>	Algoritmlar (saralash, qidirish, transformatsiya)	std::sort, std::find, std::reverse
<functional>	Funksional dasturlash vositalari	std::function, std::bind, std::mem_fn
<iterator>	Iteratorlar bilan ishlash	std::begin(), std::end(), std::advance()
<limits>	Tiplarning chegaralarini aniqlash	std::numeric_limits<int>::max()
<locale>	Mintaqaviy sozlamalar bilan ishlash	std::locale, std::use_facet()
<codecvt>	Unicode va kodlash bilan ishlash	std::wstring_convert, std::codecvt_utf8
<type_traits>	Compile-time da turga bog‚Äòliq operatsiyalar	std::is_integral, std::is_pointer
<bitset>	Bit massivlar bilan ishlash	std::bitset<8>
<cfenv>	Float va arifmetik xatolarni boshqarish	std::feclearexcept(), std::fetestexcept()
üìù Har bir headerning vazifasi va ishlatilishi
Quyida har bir header haqida batafsil tushuntirish va misollar berilgan.

1Ô∏è‚É£ <random> - Tasodifiy sonlar generatsiyasi
Vazifasi: Turli xil tasodifiy sonlar generatsiya qilish.
Foydalanish:

Psevdotasodifiy generatorlar (std::mt19937).
Normal taqsimot bo‚Äòyicha generatsiya (std::uniform_int_distribution).
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <random>

int main() {
    std::random_device rd;
    std::mt19937 gen(rd()); // Mersenne Twister generatori
    std::uniform_int_distribution<int> dist(1, 100);

    std::cout << "Tasodifiy son: " << dist(gen) << std::endl;
    return 0;
}
2Ô∏è‚É£ <algorithm> - Algoritmlar kutubxonasi
Vazifasi: Ma‚Äôlumotlarni saralash, qidirish, transformatsiya qilish algoritmlari.
Foydalanish:

Saralash: std::sort()
Qidirish: std::find()
O‚Äòzgartirish: std::reverse(), std::transform()
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    std::vector<int> numbers = {5, 2, 8, 1, 3};
    std::sort(numbers.begin(), numbers.end());

    for (int num : numbers)
        std::cout << num << " ";
    return 0;
}
3Ô∏è‚É£ <functional> - Funksional dasturlash
Vazifasi: Lambda funksiyalar, callback va boshqa funksional yondashuvlar.
Foydalanish:

Funksiyalarni saqlash: std::function
Callback funksiyalar yaratish: std::bind
A‚Äôzolarni bog‚Äòlash: std::mem_fn
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <functional>

void printMessage(const std::string& message) {
    std::cout << message << std::endl;
}

int main() {
    std::function<void(const std::string&)> func = printMessage;
    func("Salom, dunyo!");
    return 0;
}
4Ô∏è‚É£ <iterator> - Iteratorlar bilan ishlash
Vazifasi: Ma‚Äôlumotlar tuzilmalari uchun iteratorlar yaratish va ulardan foydalanish.
Foydalanish:

Boshlang‚Äòich va oxirgi elementni olish: std::begin(), std::end()
Iteratorni oldinga surish: std::advance()
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <vector>
#include <iterator>

int main() {
    std::vector<int> nums = {1, 2, 3, 4, 5};
    auto it = nums.begin();
    std::advance(it, 2);
    std::cout << "Uchinchi element: " << *it << std::endl;
    return 0;
}
5Ô∏è‚É£ <limits> - Tiplarning chegaralarini aniqlash
Vazifasi: Turli turdagi o‚Äòzgaruvchilar chegaralarini bilish.
Foydalanish:

Int, float, double uchun maksimal/minimal qiymatlar.
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <limits>

int main() {
    std::cout << "Maksimal int: " << std::numeric_limits<int>::max() << std::endl;
    return 0;
}
6Ô∏è‚É£ <locale> - Mintaqaviy sozlamalar bilan ishlash
Vazifasi: Til va hududiy sozlamalar asosida matnni formatlash.
Foydalanish:

Valyuta, sanalar, vaqt formatlari bilan ishlash.
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <locale>

int main() {
    std::locale loc("en_US.UTF-8");
    std::cout.imbue(loc);
    std::cout << "Mintaqaviy sozlamalar o‚Äòrnatildi!" << std::endl;
    return 0;
}
7Ô∏è‚É£ <codecvt> - Unicode va kodlash
Vazifasi: std::wstring va UTF-8 o‚Äòrtasida o‚Äòtish.
Foydalanish:

UTF-8 kodlash uchun ishlatiladi.
Misol:

cpp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
#include <iostream>
#include <codecvt>
#include <locale>

int main() {
    std::wstring_convert<std::codecvt_utf8<wchar_t>> converter;
    std::wstring ws = L"Salom, dunyo!";
    std::string utf8_str = converter.to_bytes(ws);

    std::cout << utf8_str << std::endl;
    return 0;
}
üéØ Xulosa
C++ dagi qo‚Äòshimcha va maxsus kutubxonalar quyidagilarga yordam beradi:

Agar sizga kerak bo‚Äòlsa...	Qaysi header?
üé≤ Tasodifiy sonlar	<random>
üî¢ Algoritmlar va saralash	<algorithm>
üé≠ Funksional dasturlash	<functional>
üîÑ Iteratorlar	<iterator>
üõ† Tiplar chegarasi	<limits>
üåç Mintaqaviy sozlamalar	<locale>
üî° Unicode bilan ishlash	<codecvt>
